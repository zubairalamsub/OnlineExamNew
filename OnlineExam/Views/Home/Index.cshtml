@{
    ViewData["Title"] = "Exampage";
    Layout = "~/Views/Shared/_StudentLayout.cshtml";
}

@*<div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    </div>*@
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>
    .table td, .table th {
        border-top: none !important;
    }

.pre  {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -15px;
  margin-left: -15px;
}
    
</style>
<div class="main-body">
    <div id="currentExam" style="display:none">
    <p> You have an Exam Running</p>
    <button class="btn alert-warning" onclick="loadQuetion()">Enter</button>
    </div>
   
    <div class="alert" id="alertdiv" style="display:none; text-align:center;border: 1px solid red;background-image: linear-gradient(to right, red, green, yellow, black); position:sticky; top:0;">
    <button value="examrunning" style="font-size:17px; color:red; font-weight:bold">Exam Running on<br /><p id="demo"></p></button>

    </div>
    <div class="alert" id="nextExam" style="display:none">
        <p>Your upcomming exam</p>
    </div>


    @*<div>
        <p id="demo"></p>
        <label>Time: </label><span id="time001" style="font-size:inherit">60</span>
    </div>*@
    <div>
       @* <h3 id="qname"></h3>*@
        <p id="qname"></p>
    </div>

    @* <div class="spinner-border text-warning" role="status">
        <span class="visually-hidden">Loading...</span>
     </div>*@
<div class="pre" style="display:none">
    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 30 30" enable-background="new 0 0 30 30" xml:space="preserve" width="30" height="30">

		<rect fill="#FBBA44" width="15" height="15">
      <animateTransform attributeName="transform" attributeType="XML" type="translate" dur="1.7s" values="0,0;15,0;15,15;0,15;0,0;" repeatCount="indefinite"/>
		</rect>	

		<rect x="15" fill="#E84150" width="15" height="15">
      <animateTransform attributeName="transform" attributeType="XML" type="translate" dur="1.7s" values="0,0;0,15;-15,15;-15,0;0,0;" repeatCount="indefinite"/>
		</rect>	
      
		<rect x="15" y="15" fill="#62B87B" width="15" height="15">
      <animateTransform attributeName="transform" attributeType="XML" type="translate" dur="1.7s" values="0,0;-15,0;-15,-15;0,-15;0,0;" repeatCount="indefinite"/>
		</rect>	

		<rect y="15" fill="#2F6FB6" width="15" height="15">
      <animateTransform attributeName="transform" attributeType="XML" type="translate" dur="1.7s" values="0,0;0,-15;15,-15;15,0;0,0;" repeatCount="indefinite"/>
		</rect>
    </svg>
  </div>
            <table class="table">
                <tbody id="question"></tbody>

            </table>
            <button type="button" id="submitans" style="display:none" class="btn btn-primary" onclick="readyAnswer()">Submit Answer</button>
    </div>
    <div id="result"></div>
</div>
<script>
    var ExId = 0;
    var LocalUri="https://localhost:44326"
    $(document).ready(function () {

        var classid = parseInt(getCookie('StudentClassId'));
        var stid = parseInt(getCookie('StudentId'));
        const checkdata = {
            
            ClassId: classid,
            StudentId:stid
        }
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: LocalUri+"/api/CheckExamAvailability",
            dataType: "json",
            data: JSON.stringify(checkdata),
            async: true,
            beforeSend: function () {
                nextRequestAllow = false;
            },
            complete: function () {
                nextRequestAllow = true;
            },
            success: function (data) {
                ExId = data.model.examId;
                
                if (data.model.count == 1) {
                    $("#currentExam").css("display", "block");
                }
                else {
                    $("#nextExam").css("display", "block");
                }
            }


        });

    }
    );


    $(document).ready(function (data) {
        
        //loadQuetion();
       
    });
    
let endTime = '';
function loadQuetion() {
     $(".pre").css("display", "block");
    var classid = parseInt(getCookie('StudentClassId'));
    var stid = parseInt(getCookie('StudentId'));

    var upQuestion = '';
        const bodydata= {
            ExamId: ExId,
            ClassId:classid,
            StudentId: stid
        }
        //fetch('https://localhost:5001/api/LoadQuestionForExam', {method: 'POST', body: 'Hello' })
        //    .then(results => results.json())
        //    .then(console.log);
            

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "https://localhost:44326/api/LoadQuestionForExam",
            dataType: "json",
            //dataType: "text",
            data: JSON.stringify(bodydata), 
            async: true,
            beforeSend: function () {
                nextRequestAllow = false;
            },
            complete: function () {

                nextRequestAllow = true;
            },
            success: function (data) {
                console.log(data.model[0].endTime);
                endTime = data.model[0].endTime;
                allQuestion = data.model;
                $("#qname").append('Exam Name:' +allQuestion[0].name);
                $(".pre").css("display", "none");
                $("#alertdiv").css("display", "block");
                $("#submitans").css("display", "block");
                $("#currentExam").css("display", "none");
                
              
                //$("h3").append(`Exam Name: ${data.model[0].name}`);
                //$("#alertdiv").css("display", "block");
                var table = document.getElementById('question')



              
                for (var i = 0; i < data.model.length; i++) {
                    var row = `<tr>
                  
					 <td>${i+1}: ${data.model[i].title}</td>
							
					  </tr>
                      <tr">
                        <td><input id="${data.model[i].firstOption}" type="radio" name="${data.model[i].id}" class="rounded - bottom" value="${data.model[i].firstOption}" /> ${data.model[i].firstOption}</td>
							
                        </tr>
                       <tr>
                        <td><input id="${data.model[i].sceondOption}" type="radio" name="${data.model[i].id}" class="rounded - bottom" value="${data.model[i].sceondOption}" /> ${data.model[i].sceondOption}</td>

                        </tr>
                        <tr>
                        <td><input id="${data.model[i].thirdOption}" type="radio" name="${data.model[i].id}" class="rounded - bottom" value="${data.model[i].thirdOption}" /> ${data.model[i].thirdOption}</td>

                        </tr>
                        <tr>
                        <td><input id="${data.model[i].fourthOption}" type="radio" name="${data.model[i].id}" class="rounded - bottom" value="${data.model[i].fourthOption}" /> ${data.model[i].fourthOption}</td>

                        </tr>
                      
                      `
                    table.innerHTML += row
                }
                
            }


        });

}




// Update the count down every 1 second
var x = setInterval(function() {
  var countDownDate = new Date(endTime).getTime();
  // Get today's date and time
  var now = new Date().getTime();
    
  // Find the distance between now and the count down date
  var distance = countDownDate - now;
    
  // Time calculations for days, hours, minutes and seconds
  var days = Math.floor(distance / (1000 * 60 * 60 * 24));
  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
  var seconds = Math.floor((distance % (1000 * 60)) / 1000);
    
  // Output the result in an element with id="demo"
  document.getElementById("demo").innerHTML ="Time Left: "+ days + "d " + hours + "h "
  + minutes + "m " + seconds + "s ";
    
  // If the count down is over, write some text 
  if (distance < 0) {
    clearInterval(x);
    document.getElementById("demo").innerHTML = "EXPIRED";
  }
}, 1000);
    //function readyAnswer() {
    //    document.getElementById("result").innerHTML = "";
        
    //    var ele = document.getElementsByTagName('input');

    //    for (i = 0; i < ele.length; i++) {

    //        if (ele[i].type = "radio") {

    //            if (ele[i].checked)
    //                document.getElementById("result").innerHTML
    //                    += ele[i].name + " Value: "
    //                    + ele[i].value + "<br>";

    //        }
    //    }
    //    console.log(result)
    //}
          function readyAnswer() {
                var StudentId = parseInt(getCookie('StudentId'));
                var arr = [];
                var len = allQuestion.length;
                 for (var i = 0; i < len; i++) {
                     let redio = allQuestion[i].id;
                     let ans=document.querySelector(`input[name="${redio}"]:checked`).value;
                arr.push({
                    ExamId:allQuestion[i].examId,
                    Id: allQuestion[i].id,
                    Selected :ans,
                    Answer : allQuestion[i].answer,
                    StudentId:StudentId,

                    sortable: true,
                    resizeable: true
                });
            }
              //console.log(arr);
            $.ajax({
            type: 'POST',
            contentType: "application/json",
            data: JSON.stringify(arr),
            url: "https://localhost:44326/api/SubmitMarks"                                   
        });

            }

    function getCookie(c_name) {
        if (document.cookie.length > 0) {
            c_start = document.cookie.indexOf(c_name + "=");
            if (c_start != -1) {
                c_start = c_start + c_name.length + 1;
                c_end = document.cookie.indexOf(";", c_start);
                if (c_end == -1) {
                    c_end = document.cookie.length;
                }
                return unescape(document.cookie.substring(c_start, c_end));
            }
        }
        return "";
    }


</script>
